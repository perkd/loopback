# Perkd Rules

# Coding
1. be simple and concise, use as few lines of code as possible for the given logic
2. after substantial code changes, review and optimise by reducing code

# Tools
- use yarn, not npm

# Debugging
- always fix the simplest and foundational issues first
- always try to reduce code, more code than necessary leads to more bugs
- always trace the call chain to find the root cause of issues
- adding complex code during debugging could lead to more bugs
- after a few failed attempts to fix, ask yourself: "take a step back, am I missing something simple and obvious??"
- debug methodically for difficult issues:
   1. create a new debug-journal (journal) to track learnings and fails/success
   2. add console.logs (logs) to trace runtime values
   3. add debug statements to the code to trace logic
- when fix attempts result in more failed tests, consider regressing to the previous working state, and log to debug-journal
- when tests fail, explain and confirm with me before modifying test logic 
- when debug run completes, such as passing all tests:
 1. clean up any logs added and review/summarise journal if used

# Migration Guidelines
- use the `enhancements.md` file to guide the migration
- always verify changes against original logic in the corresponding file (with '-org' suffix) in the `original` folder where available
- do not modify files in the `original` folder, only use for reference
- use async/await where possible when using native promises

# Tests
- do not modify test scripts to pass tests, unless it is verifed that test script is incorrect
- use promises by default unless explicitly testing callback functionality
- when explicitly migrating test scripts from callback to promises:
   - comment out tests that are stated explicitly for testing callback functionality (for legacy documentation)
- test timeouts mostly due to unresolved promises or logic errors, not slow response. Refrain from increasing timeouts

# Loopback Dependencies
- assume these packages uses native promises:
    - loopback-datasource-juggler
    - strong-remoting
